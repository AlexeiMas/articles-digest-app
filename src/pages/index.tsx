import Head from 'next/head'
import {Grid, Tab, Tabs} from "@mui/material"
import {useMemo} from "react"
import Post from "@/components/Post"
import CommentsBlock from "@/components/CommentsBlock"
import TagsBlock from "@/components/TagsBlock"
import PostSkeleton from "@/components/Post/Skeleton"
import {useGetAllPostsQuery} from "@/store/services/posts.api"
import {useGetLastTagsQuery} from "@/store/services/tags.api"
import {useSession} from "next-auth/react"
import {IUserDto} from "@/dtos/UserDto"

export default function Home() {
  const {data, isLoading} = useGetAllPostsQuery(void 0, {refetchOnMountOrArgChange: true})
  const {data: tags, isLoading: isTagsLoading} = useGetLastTagsQuery()
  const {data: session} = useSession()

  const userId = useMemo(() => (session?.user as IUserDto)?.id, [session])
  const Skeleton = useMemo(() => [...Array(5)].map((_, i) => <PostSkeleton key={i}/>), [])

  return (
    <>
      <Head>
        <title>Home page</title>
        <meta name="description" content="Generated by create next app"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="icon" href="/favicon.ico"/>
      </Head>
      <main>
        <Tabs style={{marginBottom: 15}} value={0} aria-label="post tabs">
          <Tab label="New"/>
          <Tab label="Popular"/>
        </Tabs>
        <Grid container spacing={4}>
          <Grid xs={8} item>
            {isLoading ? Skeleton : data?.map((item) =>
              <Post
                key={item._id}
                _id={item._id}
                title={item.title}
                createdAt={item.createdAt}
                imageUrl={item.imageUrl}
                user={item.user}
                viewsCount={item.viewsCount}
                commentsCount={item.commentsCount}
                tags={item.tags}
                isEditable={userId === item.user._id}
              />
            )}
          </Grid>
          <Grid xs={4} item>
            <TagsBlock items={tags || []} isLoading={isTagsLoading}/>
            <CommentsBlock
              items={[
                {
                  user: {
                    fullName: 'User First',
                    avatarUrl: 'https://mui.com/static/images/avatar/1.jpg',
                  },
                  text: 'This is test comment',
                },
                {
                  user: {
                    fullName: 'User Second',
                    avatarUrl: 'https://mui.com/static/images/avatar/2.jpg',
                  },
                  text: 'One more test comment',
                },
              ]}
              isLoading={false}
            />
          </Grid>
        </Grid>
      </main>
    </>
  )
}
